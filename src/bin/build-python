#!/bin/sh
# https://stackoverflow.com/questions/57977481/how-to-use-enable-load-extension-from-sqlite3
# https://www.sqlite.org/download.html
# https://www.sqlite.org/2022/sqlite-tools-osx-x86-3370200.zip
set -eu


PYTHON_NAME='py'
PYTHON_PREFIX="/${PYTHON_NAME}"
PYTHON_VERSION='3.10'

url='https://www.python.org/ftp/python'

for arg; do
  case "${arg}" in
    --force) force=1 ;;
    --minor=*) version="${arg##--minor=}" ;;
    --name=*) name="${arg##--name=}" ;;
    --prefix=*) prefix="${arg##--prefix=}" ;;
    --version=*) version="${arg##--version=}" ;;
  esac
done

name="${name:-${PYTHON_NAME:-python}}"
previous_name="$(find "${PYTHON_PREFIX}/bin" -mindepth 1 -maxdepth 1 \
  -name "*3" -not \( -name "2to3" -or -name "idle3" -or -name "pip3" -or -name "pydoc3" \))"
previous_name="${previous_name:-${name}3}"
[ "${name}3" = "${previous_name##*/}" ] || echo Name Can not be Changed

prefix="${prefix:-${PYTHON_PREFIX}}"
version="${version:-${PYTHON_VERSION}}"

minor="${minor:-$(curl -fsSL "${url}" | awk -F '["/]' -v v="${version}." '$2 ~ v { gsub(v, ""); print $2 }' \
  | sort -V | tail -1)}"
[ "${minor-}" ] || echo Error

semver="${version}.${minor}"

src="${PYTHON_PREFIX}/src"
mkdir -p "${src}"
src_installed="$(find "${src}" -mindepth 1 -maxdepth 1 -name "Python-${version}.*" -type d)"
installed="${src_installed##*/}"

[ "${installed##*-}" != "${semver}" ] || [ "${force-0}" -eq 1 ] || exit 0
rm -rf "${src_installed}"

main="$("${PYTHON_PREFIX}/bin/${name}3" --version 2>/dev/null | awk -F '[. ]' '{ print $2"."$3 }')"
main="${main:-${version}}"
[ "${main}" = "${version}" ] || install='altinstall'

#curl -fsSL "${url}/${semver}/Python-${semver}.tar.xz" | tar -xf - -C "${src}"
src="${PYTHON_PREFIX}/src/Python-${semver}"
mkdir -p "${src}"
# shellcheck disable=SC2064
trap "rm -rf ${src}" 1 2 3 6

curl -fsSL "${url}/${semver}/Python-${semver}.tar.xz" \
  | tar --extract --directory "${src}" --strip-components=1 --file -
[ -f "${src}/configure" ] || echo Error

#deps https://devguide.python.org/setup/
# https://realpython.com/cpython-source-code-guide/#installing-a-custom-version
cd "${src}"
sed "s|испытание.pythontest.net|docs.python.org|" Lib/test/test_socket.py >/tmp/a
mv /tmp/a Lib/test/test_socket.py

./configure \
  --prefix="${PYTHON_PREFIX}" \
  --program-transform-name="s/python/${name}/g" \
  --program-suffix='' \
  --enable-optimizations \
  --enable-option-checking=fatal \
  --with-ensurepip \
  --with-lto \
  --with-ssl-default-suites=openssl \
  --with-builtin-hashlib-hashes=md5,sha1,sha256,sha512,sha3,blake2 \
  --quiet
# --with-ssl-default-suites=openssl \
# --enable-loadable-sqlite-extensions \  # brew
#   --enable-shared \
#  --with-system-expat \
#  --with-system-ffi \

nproc="$(nproc 2>/dev/null || true)"
export CMAKE_BUILD_PARALLEL_LEVEL="${nproc:-$(sysctl -n hw.physicalcpu)}"
make -j "${CMAKE_BUILD_PARALLEL_LEVEL}" --quiet
make test --quiet
make "${install:-install}"
find "${PYTHON_PREFIX}" -depth \( \( -type d -a \( -name test -o -name tests -o -name idle_test \) \) \
  -o \( -type f -a \( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \) \) \) -exec rm -rf '{}' +
rm -rf "${src}/build"
rm -rf "${src}"/*profclang*

if [ "${install-}" = 'altinstall' ]; then
  executable="${PYTHON_PREFIX}/bin/${name}${version}"
  installed="$("${executable}" --version | awk '{ print $2 }')"
  "${executable}" -m ensurepip --upgrade --altinstall
else
  executable="${PYTHON_PREFIX}/bin/${name}3"
  installed="$("${executable}" --version | awk '{ print $2 }')"
  "${executable}" -m ensurepip --upgrade --default-pip
fi

if [ "${installed}" = "${semver}" ]; then
  "${executable}" -m pip install --quiet --upgrade pip setuptools wheel
  echo Installed
else
  echo Error
fi

#######################################
# build and install python
# Globals:
#   PYTHON_PREFIX
#   PYTHON_VERSION
# Arguments:
#   --force                   remove existing installation (default: false)
#   --minor=<minor>           version minor (default: latest)
#   --prefix=<path>           installation prefix (default: $PYTHON_PREFIX)
#   --version=<major.minor>   major and minor version (default: $PYTHON_VERSION)
#######################################
main () {
  . exit-stderr.sh
  . print.sh

}

main "$@"
